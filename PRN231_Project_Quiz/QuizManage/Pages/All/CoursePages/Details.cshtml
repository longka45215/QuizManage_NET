@page
@using DTO.DTOs;
@using QuizManage.Helper;
@model QuizManage.Pages.All.CoursePages.DetailsModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Details";
    var user = SessionHelper.GetObjectFromJson<UserDTO>(HttpContext.Session, "User");
}

<div class="container-fluid">


    @if (Model.Subjects != null && Model.Subjects.Count != 0)
    {
        <div id="MainCourse">
            <h2>Tất cả Môn Học</h2>
            <h3>@Model.Course.CourseName</h3>
            @if (user!=null)
            {
                @if (Model.Register.UserId != 0)
                {
                    <div style="margin-top: 10px;margin-bottom:10px;">
                        <button disabled style="background-color: greenyellow; border: none; padding: 10px 20px; color: darkblue;font-size: medium; font-weight: 600;
                               border-radius: 8px;">
                            ENROLLED
                        </button>
                    </div>
                }
                else
                {
                    <div style="margin-top: 10px;margin-bottom:10px;">
                        <button id="enroll" style="background-color: green; border: none; padding: 10px 20px; color: darkblue;font-size: medium; font-weight: 600;
                               border-radius: 8px;cursor: pointer;">
                            ENROLL
                        </button>
                    </div>
                }
            }



            <div class="row">
                @foreach (var item in Model.Subjects)
                {
                    <div class="card col-md-4" style="width: 18rem; margin-top:10px">
                        <a style="text-decoration: none; color: black" href="#">
                            <img class="card-img-top" src="~/Img/courseImg.png" height="100%" width="100%" alt="@item.Item1.SubjectName">
                        </a>
                        <div class="card-body">
                            <a href="#"><h5 class="card-title">@item.Item1.SubjectName</h5></a>
                            <p class="card-text">@item.Item1.Description</p>
                            <a href="/All/SubjectPages/Details?id=@item.Item1.SubjectId" class="btn btn-primary">Learn</a>
                            @if (user != null)
                             {               
                                <a href="/All/SubjectPages/TakeQuiz?id=@item.Item1.SubjectId" class="btn btn-secondary">Take Quiz</a>
                                @if (user.RoleId==0)
                                {
                                    <select onchange="AssignExpert(this.value,'@item.Item1.SubjectId')">
                                        <option value=""></option>
                                        @foreach (var expert in Model.Expert)
                                        {
                                            if (expert.UserId == item.Item2.UserId)
                                            {
                                                <option selected value="@expert.UserId">@expert.UserName</option>
                                            }
                                            else
                                            {

                                                <option value="@expert.UserId">@expert.UserName</option>
                                            }

                                        }
                                    </select>
                                }
                            }
                        </div>

                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div style="text-align: center"><img src="https://deo.shopeemobile.com/shopee/shopee-pcmall-live-sg//assets/a60759ad1dabe909c46a817ecbf71878.png" alt="alt" width="250%" height="200px" /></div>
        <div style="text-align: center; color: rgba(0,0,0,.54)">Empty</div>

    }

</div>
@if (user!=null)
{
    <script>



        $("#enroll").on("click", function () {
            var enrolldata = {
                "userId": "@(user.UserId)",
                "courseId": "@(Model.Course.CourseId)"
            };
            $.ajax({
                url: "http://localhost:5298/api/Register/Post",
                type: "post",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(enrolldata),
                dataType: "json",
                success: function (result, status, xhr) {
                    console.log(xhr.status)
                    location.reload()
                },
                error: function (xhr, status, error) {
                    console.log(xhr)
                    location.reload()
                }
            });
        });
        function AssignExpert(expertId, subjectId) {
            var assigndata = {
                "userId": expertId,
                "subjectId": subjectId
            }
            if (expertId === "") {
                console.log(assigndata)
                $.ajax({
                    url: "http://localhost:5298/api/ExpertAssign/Delete" + subjectId,
                    type: "delete",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(assigndata),
                    dataType: "json",
                    success: function (result, status, xhr) {
                        console.log(result)
                        if (xhr.status === 200) {
                            location.reload()
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr)
                    }
                });
            } else {
                $.ajax({
                    url: "http://localhost:5298/api/ExpertAssign/Post",
                    type: "post",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(assigndata),
                    dataType: "json",
                    success: function (result, status, xhr) {
                        console.log(result)
                        if (xhr.status === 200) {
                            location.reload()
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr)
                    }
                });
            }

        }
    </script>
}